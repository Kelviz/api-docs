openapi: 3.0.0
info:
  title: User Management and Authentication API
  version: 1.0.0
  description: API for user registration, login, token refresh, logout, and user management
servers:
  - url: http://localhost:8000

paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "201":
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /refresh-access-token:
    post:
      summary: Refresh access token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshTokenRequest"
      responses:
        "200":
          description: Access token refreshed successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /logout:
    post:
      summary: Logout a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LogoutRequest"
      responses:
        "200":
          description: User logged out successfully
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /users:
    get:
      summary: List all users
      security:
        - bearerAuth: []
      responses:
        "200":
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
    post:
      summary: Create a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /users/{id}:
    get:
      summary: Get a user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A single user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
    put:
      summary: Update a user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
        "404":
          description: User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

    delete:
      summary: Delete a user by ID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: User deleted
        "404":
          description: User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /user_profiles:
    get:
      summary: List all user profiles
      responses:
        "200":
          description: A list of user profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserProfile"

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

    post:
      summary: Create a new user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "201":
          description: User profile created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageNotFoundErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /user_profiles/{id}:
    get:
      summary: Get a user profile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A single user profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "404":
          description: User profile not found

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"
    put:
      summary: Update a user profile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserProfile"
      responses:
        "200":
          description: User profile updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

    delete:
      summary: Delete a user profile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: User profile deleted

        "404":
          description: User profile not found

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /organization_profiles:
    get:
      summary: List all organization profiles
      responses:
        "200":
          description: A list of organization profiles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationProfile"

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

    post:
      summary: Create a new organization profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationProfile"
      responses:
        "201":
          description: Organization profile created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationProfile"

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /organization_profiles/{id}:
    get:
      summary: Get an organization profile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A single organization profile
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationProfile"
        "404":
          description: Organization profile not found

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

    put:
      summary: Update an organization profile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationProfile"
      responses:
        "200":
          description: Organization profile updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationProfile"
        "404":
          description: Organization profile not found

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

    delete:
      summary: Delete an organization profile by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Organization profile deleted

        "404":
          description: Organization profile not found

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /organization_users:
    get:
      summary: List all user-organization relationships
      responses:
        "200":
          description: A list of user-organization relationships
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationUser"

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

    post:
      summary: Create a new user-organization relationship
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationUser"
      responses:
        "201":
          description: User-organization relationship created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationUser"

        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnprocessableEntityResponse"

        "400":
          description: Bad request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BadRequestErrorResponse"

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

  /organization_users/{user_id}/{organization_id}:
    get:
      summary: Get a user-organization relationship by user ID and organization ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
        - name: organization_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: A single user-organization relationship
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrganizationUser"
        "404":
          description: User or User-organization relationship not found

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

    delete:
      summary: Delete a user-organization relationship by user ID and organization ID
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
        - name: organization_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: User-organization relationship deleted

        "404":
          description: User-organization relationship not found

        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerErrorResponse"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    RegisterRequest:
      type: object
      required:
        - firstName
        - lastName
        - email
        - password
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        password:
          type: string

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
        password:
          type: string

    RefreshTokenRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          type: string

    LogoutRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          type: string

    User:
      type: object
      required:
        - email
      properties:
        id:
          type: string
          example: "1"
        email:
          type: string
          example: "Kraze@example.com"
        username:
          type: string
          example: "Kraze"
        created_at:
          type: string
          format: date-time
          example: "2023-07-13T00:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2023-07-13T00:00:00Z"
        isActive:
          type: boolean
          example: true
        is_superadmin:
          type: boolean
          example: false

    UserProfile:
      type: object
      required:
        - user_id
        - full_name
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          example: 1
        user_id:
          type: integer
          example: 1
        full_name:
          type: string
          example: "John Doe"
        avatar_url:
          type: string
          example: "http://example.com/avatar.jpg"
        bio:
          type: string
          example: "A short bio about the user."
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-02T12:00:00Z"

    OrganizationProfile:
      type: object
      required:
        - name
        - created_at
        - updated_at
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "Example Organization"
        logo_url:
          type: string
          example: "http://example.com/logo.jpg"
        description:
          type: string
          example: "A description of the organization."
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-02T12:00:00Z"

    OrganizationUser:
      type: object
      required:
        - user_id
        - organization_id
        - created_at
        - updated_at
      properties:
        user_id:
          type: integer
          example: 1
        organization_id:
          type: integer
          example: 1
        created_at:
          type: string
          format: date-time
          example: "2024-01-01T12:00:00Z"
        updated_at:
          type: string
          format: date-time
          example: "2024-01-02T12:00:00Z"

    UserResponse:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        date_created:
          type: string

    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string

    TokenResponse:
      type: object
      properties:
        access_token:
          type: string

    InternalServerErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Internal server error"

    BadRequestErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Bad request"

    PageNotFoundErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Page not found"

    UnprocessableEntityResponse:
      type: object
      properties:
        error:
          type: string
          example: "Empty fields found."
